/* Generated By:JavaCC: Do not edit this line. SelParserDefaultVisitor.java Version 6.0_1 */
package com.netflix.sel.ast;

public class SelParserDefaultVisitor implements SelParserVisitor {
  public Object defaultVisit(SimpleNode node, Object data) {
    node.childrenAccept(this, data);
    return data;
  }

  public Object visit(SimpleNode node, Object data) {
    return defaultVisit(node, data);
  }

  public Object visit(ASTExecute node, Object data) {
    return defaultVisit(node, data);
  }

  public Object visit(ASTImportDeclaration node, Object data) {
    return defaultVisit(node, data);
  }

  public Object visit(ASTVariableDeclarator node, Object data) {
    return defaultVisit(node, data);
  }

  public Object visit(ASTVariableDeclaratorId node, Object data) {
    return defaultVisit(node, data);
  }

  public Object visit(ASTArrayInitializer node, Object data) {
    return defaultVisit(node, data);
  }

  public Object visit(ASTType node, Object data) {
    return defaultVisit(node, data);
  }

  public Object visit(ASTPrimitiveType node, Object data) {
    return defaultVisit(node, data);
  }

  public Object visit(ASTClassType node, Object data) {
    return defaultVisit(node, data);
  }

  public Object visit(ASTName node, Object data) {
    return defaultVisit(node, data);
  }

  public Object visit(ASTExpression node, Object data) {
    return defaultVisit(node, data);
  }

  public Object visit(ASTAssignment node, Object data) {
    return defaultVisit(node, data);
  }

  public Object visit(ASTAssignmentOperator node, Object data) {
    return defaultVisit(node, data);
  }

  public Object visit(ASTTernary node, Object data) {
    return defaultVisit(node, data);
  }

  public Object visit(ASTBinaryExpr node, Object data) {
    return defaultVisit(node, data);
  }

  public Object visit(ASTUnary node, Object data) {
    return defaultVisit(node, data);
  }

  public Object visit(ASTPrimaryExpression node, Object data) {
    return defaultVisit(node, data);
  }

  public Object visit(ASTPrimarySuffix node, Object data) {
    return defaultVisit(node, data);
  }

  public Object visit(ASTArrayIdx node, Object data) {
    return defaultVisit(node, data);
  }

  public Object visit(ASTMethod node, Object data) {
    return defaultVisit(node, data);
  }

  public Object visit(ASTParams node, Object data) {
    return defaultVisit(node, data);
  }

  public Object visit(ASTLiteral node, Object data) {
    return defaultVisit(node, data);
  }

  public Object visit(ASTAllocationExpression node, Object data) {
    return defaultVisit(node, data);
  }

  public Object visit(ASTArgs node, Object data) {
    return defaultVisit(node, data);
  }

  public Object visit(ASTArrayDims node, Object data) {
    return defaultVisit(node, data);
  }

  public Object visit(ASTStatement node, Object data) {
    return defaultVisit(node, data);
  }

  public Object visit(ASTBlock node, Object data) {
    return defaultVisit(node, data);
  }

  public Object visit(ASTLocalVariableDeclaration node, Object data) {
    return defaultVisit(node, data);
  }

  public Object visit(ASTIfStatement node, Object data) {
    return defaultVisit(node, data);
  }

  public Object visit(ASTWhileStatement node, Object data) {
    return defaultVisit(node, data);
  }

  public Object visit(ASTForStatement node, Object data) {
    return defaultVisit(node, data);
  }

  public Object visit(ASTForInit node, Object data) {
    return defaultVisit(node, data);
  }

  public Object visit(ASTForUpdate node, Object data) {
    return defaultVisit(node, data);
  }

  public Object visit(ASTBreakStatement node, Object data) {
    return defaultVisit(node, data);
  }

  public Object visit(ASTContinueStatement node, Object data) {
    return defaultVisit(node, data);
  }

  public Object visit(ASTReturnStatement node, Object data) {
    return defaultVisit(node, data);
  }

  public Object visit(ASTThrowStatement node, Object data) {
    return defaultVisit(node, data);
  }
}
/* JavaCC - OriginalChecksum=a7cd627652ce3fd2427d3eb17b17d8cf (do not edit this line) */
